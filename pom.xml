<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.ck-jesse</groupId>
    <artifactId>l2cache</artifactId>
    <name>l2cache</name>
    <version>1.0.36</version>
    <packaging>pom</packaging>
    <description>二级缓存组件</description>
    <url>https://github.com/ck-jesse/l2cache</url>

    <modules>
        <module>l2cache-core</module>
        <module>l2cache-spring-boot-starter</module>
        <module>l2cache-example</module>
        <module>l2cache-jd-hotkey</module>
    </modules>

    <properties>
        <!-- proj`ect -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- dependencies -->
        <spring-boot.version>2.3.0.RELEASE</spring-boot.version>
        <spring.cloud.version>Greenwich.RELEASE</spring.cloud.version>
        <caffeine.version>2.8.4</caffeine.version>
        <guava.version>32.0.0-jre</guava.version>
        <redisson.version>3.13.0</redisson.version>
        <kafka-clients.version>2.0.1</kafka-clients.version>
        <lombok.version>1.18.12</lombok.version>
        <junit.version>4.13.1</junit.version>
        <hutool.version>5.8.17</hutool.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- spring-boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka-clients.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- l2cache-core -->
            <dependency>
                <groupId>io.github.ck-jesse</groupId>
                <artifactId>l2cache-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- l2cache-spring-boot-starter -->
            <dependency>
                <groupId>io.github.ck-jesse</groupId>
                <artifactId>l2cache-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- jd-hotkey-client -->
            <dependency>
                <groupId>io.github.ck-jesse</groupId>
                <artifactId>jd-hotkey-client</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 编译打包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- 生成源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 该插件用于复制指定的文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- 打包时跳过测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <licenses>
        <license>
            <name>Open Software License 3.0</name>
            <url>https://opensource.org/licenses/OSL-3.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>jesse</name>
            <email>cck1112@163.com</email>
            <organization>https://blog.csdn.net/icansoicrazy/</organization>
        </developer>
    </developers>

    <scm>
        <connection>scm:https://github.com/ck-jesse/l2cache.git</connection>
        <developerConnection>scm:https://github.com/ck-jesse/l2cache.git</developerConnection>
        <url>https://github.com/ck-jesse/l2cache.git</url>
    </scm>

    <profiles>
        <!-- private nexus repository for test -->
        <!-- 发布到私有仓库: mvn clean deploy -->
        <profile>
            <id>weeget-nexus</id>
            <properties>
                <profiles.active>weeget-nexus</profiles.active>
            </properties>
            <!-- 发布到maven私服 -->
            <distributionManagement>
                <repository>
                    <id>maven-releases</id>
                    <name>youxuan-central</name>
                    <url>http://nexus.weeget.cn/repository/maven-releases/</url>
                </repository>
                <snapshotRepository>
                    <id>maven-snapshots</id>
                    <name>youxuan-central</name>
                    <url>http://nexus.weeget.cn/repository/maven-snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- Central maven repository -->
        <!-- Deploying to OSSRH with Apache Maven: https://central.sonatype.org/publish/publish-maven/ -->
        <!-- 发布到中央仓库: mvn clean deploy -P ossrh -Dgpg.passphrase=密码 -Dmaven.test.skip=true -f pom.xml -->
        <profile>
            <id>ossrh</id>
            <properties>
                <profiles.active>ossrh</profiles.active>
                <gpg.executable>gpg</gpg.executable>
            </properties>
            <!-- 发布到maven中央仓库 -->
            <!-- 403 Forbidden: https://central.sonatype.org/faq/403-error/ -->
            <!-- 常见错误: https://central.sonatype.org/faq/ -->
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <name>snapshots maven-central</name>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <name>staging maven-central</name>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <!-- javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9.1</version>
                        <configuration>
                            <!-- 忽略@date标记，jdk1.8要加上，1.7要去掉，否则会报错 -->
                            <additionalJOptions>
                                <additionalJOption>-Xdoclint:none</additionalJOption>
                            </additionalJOptions>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Gpg Signature 对部署到中央仓库的组件进行签名 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- 自动发布暂存仓库中的组件，简化部署到中央仓库的步骤，只需无需每次去登陆 https://oss.sonatype.org/ 手动发布 -->
                    <!--
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.7</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    -->
                </plugins>
            </build>
        </profile>
    </profiles>

</project>